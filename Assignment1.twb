<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0611.2007                               -->
<workbook original-version='18.1' source-build='2023.2.0 (20232.23.0611.2007)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='CAR DETAILS FROM CAR DEKHO' inline='true' name='federated.1qjiakw1fs5lz91awlrx10w90g9z' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='CAR DETAILS FROM CAR DEKHO' name='textscan.0y4m6tv1hgefpr1fro3lw1dl0pam'>
            <connection class='textscan' directory='C:/Users/Sukhpal/Downloads/All data used in tableau/Assignment data' filename='CAR DETAILS FROM CAR DEKHO.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0y4m6tv1hgefpr1fro3lw1dl0pam' name='CAR DETAILS FROM CAR DEKHO.csv' table='[CAR DETAILS FROM CAR DEKHO#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='name' ordinal='0' />
            <column datatype='date' date-parse-format='yyyy' name='year' ordinal='1' />
            <column datatype='integer' name='selling_price' ordinal='2' />
            <column datatype='integer' name='km_driven' ordinal='3' />
            <column datatype='string' name='fuel' ordinal='4' />
            <column datatype='string' name='seller_type' ordinal='5' />
            <column datatype='string' name='transmission' ordinal='6' />
            <column datatype='string' name='owner' ordinal='7' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0y4m6tv1hgefpr1fro3lw1dl0pam' name='CAR DETAILS FROM CAR DEKHO.csv' table='[CAR DETAILS FROM CAR DEKHO#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='name' ordinal='0' />
            <column datatype='date' date-parse-format='yyyy' name='year' ordinal='1' />
            <column datatype='integer' name='selling_price' ordinal='2' />
            <column datatype='integer' name='km_driven' ordinal='3' />
            <column datatype='string' name='fuel' ordinal='4' />
            <column datatype='string' name='seller_type' ordinal='5' />
            <column datatype='string' name='transmission' ordinal='6' />
            <column datatype='string' name='owner' ordinal='7' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[CAR DETAILS FROM CAR DEKHO.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[CAR DETAILS FROM CAR DEKHO.csv]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[CAR DETAILS FROM CAR DEKHO.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>selling_price</remote-name>
            <remote-type>20</remote-type>
            <local-name>[selling_price]</local-name>
            <parent-name>[CAR DETAILS FROM CAR DEKHO.csv]</parent-name>
            <remote-alias>selling_price</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>km_driven</remote-name>
            <remote-type>20</remote-type>
            <local-name>[km_driven]</local-name>
            <parent-name>[CAR DETAILS FROM CAR DEKHO.csv]</parent-name>
            <remote-alias>km_driven</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fuel</remote-name>
            <remote-type>129</remote-type>
            <local-name>[fuel]</local-name>
            <parent-name>[CAR DETAILS FROM CAR DEKHO.csv]</parent-name>
            <remote-alias>fuel</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seller_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[seller_type]</local-name>
            <parent-name>[CAR DETAILS FROM CAR DEKHO.csv]</parent-name>
            <remote-alias>seller_type</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>transmission</remote-name>
            <remote-type>129</remote-type>
            <local-name>[transmission]</local-name>
            <parent-name>[CAR DETAILS FROM CAR DEKHO.csv]</parent-name>
            <remote-alias>transmission</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>owner</remote-name>
            <remote-type>129</remote-type>
            <local-name>[owner]</local-name>
            <parent-name>[CAR DETAILS FROM CAR DEKHO.csv]</parent-name>
            <remote-alias>owner</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='CAR DETAILS FROM CAR DEKHO.csv' datatype='table' name='[__tableau_internal_object_id__].[CAR DETAILS FROM CAR DEKHO.csv_1529145912104C219FFDB133067B8B7C]' role='measure' type='quantitative' />
      <column caption='Fuel' datatype='string' name='[fuel]' role='dimension' type='nominal' />
      <column caption='Km Driven' datatype='integer' name='[km_driven]' role='measure' type='quantitative' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='Owner' datatype='string' name='[owner]' role='dimension' type='nominal' />
      <column caption='Seller Type' datatype='string' name='[seller_type]' role='dimension' type='nominal' />
      <column caption='Selling Price' datatype='integer' name='[selling_price]' role='measure' type='quantitative' />
      <column caption='Transmission' datatype='string' name='[transmission]' role='dimension' type='nominal' />
      <column caption='Year' datatype='date' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[km_driven]' derivation='Avg' name='[avg:km_driven:qk]' pivot='key' type='quantitative' />
      <column-instance column='[selling_price]' derivation='Avg' name='[avg:selling_price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[km_driven]' derivation='Sum' name='[sum:km_driven:qk]' pivot='key' type='quantitative' />
      <column-instance column='[selling_price]' derivation='Sum' name='[sum:selling_price:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1qjiakw1fs5lz91awlrx10w90g9z].[avg:km_driven:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1qjiakw1fs5lz91awlrx10w90g9z].[sum:km_driven:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1qjiakw1fs5lz91awlrx10w90g9z].[avg:selling_price:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1qjiakw1fs5lz91awlrx10w90g9z].[sum:selling_price:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='CAR DETAILS FROM CAR DEKHO.csv' id='CAR DETAILS FROM CAR DEKHO.csv_1529145912104C219FFDB133067B8B7C'>
            <properties context=''>
              <relation connection='textscan.0y4m6tv1hgefpr1fro3lw1dl0pam' name='CAR DETAILS FROM CAR DEKHO.csv' table='[CAR DETAILS FROM CAR DEKHO#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='name' ordinal='0' />
                  <column datatype='date' date-parse-format='yyyy' name='year' ordinal='1' />
                  <column datatype='integer' name='selling_price' ordinal='2' />
                  <column datatype='integer' name='km_driven' ordinal='3' />
                  <column datatype='string' name='fuel' ordinal='4' />
                  <column datatype='string' name='seller_type' ordinal='5' />
                  <column datatype='string' name='transmission' ordinal='6' />
                  <column datatype='string' name='owner' ordinal='7' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='CAR DETAILS FROM CAR DEKHO' name='federated.1qjiakw1fs5lz91awlrx10w90g9z' />
          </datasources>
          <datasource-dependencies datasource='federated.1qjiakw1fs5lz91awlrx10w90g9z'>
            <column-instance column='[selling_price]' derivation='Avg' name='[avg:selling_price:qk]' pivot='key' type='quantitative' />
            <column caption='Fuel' datatype='string' name='[fuel]' role='dimension' type='nominal' />
            <column-instance column='[fuel]' derivation='None' name='[none:fuel:nk]' pivot='key' type='nominal' />
            <column caption='Selling Price' datatype='integer' name='[selling_price]' role='measure' type='quantitative' />
            <column-instance column='[selling_price]' derivation='Sum' name='[sum:selling_price:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1qjiakw1fs5lz91awlrx10w90g9z].[none:fuel:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1qjiakw1fs5lz91awlrx10w90g9z].[avg:selling_price:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1qjiakw1fs5lz91awlrx10w90g9z].[sum:selling_price:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.9340331554412842' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1qjiakw1fs5lz91awlrx10w90g9z].[avg:selling_price:qk]</rows>
        <cols>[federated.1qjiakw1fs5lz91awlrx10w90g9z].[none:fuel:nk]</cols>
      </table>
      <simple-id uuid='{7B585F2E-D8C5-4B41-AF14-81479B92F41B}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='CAR DETAILS FROM CAR DEKHO' name='federated.1qjiakw1fs5lz91awlrx10w90g9z' />
          </datasources>
          <datasource-dependencies datasource='federated.1qjiakw1fs5lz91awlrx10w90g9z'>
            <column-instance column='[km_driven]' derivation='Avg' name='[avg:km_driven:qk]' pivot='key' type='quantitative' />
            <column-instance column='[selling_price]' derivation='Avg' name='[avg:selling_price:qk]' pivot='key' type='quantitative' />
            <column caption='Km Driven' datatype='integer' name='[km_driven]' role='measure' type='quantitative' />
            <column-instance column='[owner]' derivation='None' name='[none:owner:nk]' pivot='key' type='nominal' />
            <column caption='Owner' datatype='string' name='[owner]' role='dimension' type='nominal' />
            <column caption='Selling Price' datatype='integer' name='[selling_price]' role='measure' type='quantitative' />
            <column-instance column='[km_driven]' derivation='Sum' name='[sum:km_driven:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1qjiakw1fs5lz91awlrx10w90g9z].[none:owner:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1qjiakw1fs5lz91awlrx10w90g9z].[avg:selling_price:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1qjiakw1fs5lz91awlrx10w90g9z].[avg:km_driven:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1qjiakw1fs5lz91awlrx10w90g9z].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1qjiakw1fs5lz91awlrx10w90g9z].[avg:selling_price:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1qjiakw1fs5lz91awlrx10w90g9z].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1qjiakw1fs5lz91awlrx10w90g9z].[avg:km_driven:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1qjiakw1fs5lz91awlrx10w90g9z].[:Measure Names]' />
              <text column='[federated.1qjiakw1fs5lz91awlrx10w90g9z].[sum:km_driven:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1qjiakw1fs5lz91awlrx10w90g9z].[avg:selling_price:qk] + [federated.1qjiakw1fs5lz91awlrx10w90g9z].[avg:km_driven:qk])</rows>
        <cols>[federated.1qjiakw1fs5lz91awlrx10w90g9z].[none:owner:nk]</cols>
      </table>
      <simple-id uuid='{FEE247A8-5557-4D80-BF42-F5DF9160F619}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='CAR DETAILS FROM CAR DEKHO' name='federated.1qjiakw1fs5lz91awlrx10w90g9z' />
          </datasources>
          <datasource-dependencies datasource='federated.1qjiakw1fs5lz91awlrx10w90g9z'>
            <column-instance column='[selling_price]' derivation='Avg' name='[avg:selling_price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Selling Price' datatype='integer' name='[selling_price]' role='measure' type='quantitative' />
            <column-instance column='[selling_price]' derivation='Sum' name='[sum:selling_price:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='date' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1qjiakw1fs5lz91awlrx10w90g9z].[sum:selling_price:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1qjiakw1fs5lz91awlrx10w90g9z].[avg:selling_price:qk]</rows>
        <cols>[federated.1qjiakw1fs5lz91awlrx10w90g9z].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{C094209B-CE79-4394-B92B-476A7A222177}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1qjiakw1fs5lz91awlrx10w90g9z].[none:fuel:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FBA991F7-F0C8-4FD7-89E1-680F6324DDD7}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1qjiakw1fs5lz91awlrx10w90g9z].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1qjiakw1fs5lz91awlrx10w90g9z].[none:owner:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C7AD5EC9-FB13-475F-B458-F277A47EDBB9}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1qjiakw1fs5lz91awlrx10w90g9z].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{54C15E3B-1A66-48BD-B1CC-2CA0066A5DF9}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAUjklEQVR4nO3dW3Mb533H8e8uAAIgzgR4FM+kKFGiFVuO69hO4rRO28w4nTTTmV6k7bR9
      AbnqRd9EZ3rbXvQFtL1omiZpk8ZO3DjxWZJ1ICkeQPB8AEkQBy6wiz30ghQtj0BqYJMgof1/
      ZjwGVyDwYJc/7OH57/MojuM4COFS6nk3QIjzJAEQriYBEK4mARCuJgEQriYBEK52pgGwbfss
      X16IL+1MAyBdDOKik0Mg4WoSAOFqEgDhat56nqwVcyyurGPiI+KzKVVVBrripJfW6R0awayU
      MMplevoH8CjKWbVZiFOj1FsMV9rZYM/0UC5qtHotdvcNxq8Os7CwxsbSJL1XXmKwJ4Vt21iW
      harKTkZcXHXtAcBhLbvH6NgoU9s7YDr4PVAoFLBVD929A5T2dqEnhcfjATj6vxAXUZ17AIf9
      fY1QKMR+foeiodKZjLC4tEpffz+GXkFxLDz+ED6PgmVZEgBxodV5fKIQCoUACMWSdLUnUFQv
      g4MDeFSFYDBIoDWMz3O2x/+WUeHug6mjnx27yq3bdwCYe/Axed3h3q33mV/eBCC/tcovfvG/
      rG7neP+dt/ng00k2V9K8+/4nWA7gWNz58D1mF9fZ3Vjm1+/8hlKpyNu//DmTs0tn+lnE+WrK
      A/RiMc/iyuEfpuNw/9ZHLG2sou1t8uD271hfy5D3dLGyMA3A7OwktjdItMVhcmGR9mSKydkl
      hpMK92azlDZmqUZ7SU9/iicQYaQjwN3JSVY2iiSTiXP8pOKsNWUA4slOoqEAAJa5z70HcyxM
      T/Grd96lpJVJz83REgzj9R6c4tx85Q3+4OVRPvw4w9/+9d8wf+c2fT1J7jx4iGU5hDqGMbbm
      WNvOk99aZcMI87WvvsRf/eBPuf3x787zo4ozVvdVoHqc1TnAWuYh7374KRMT46iBJFeHe0in
      ZxgeHqOwMYMRHWX247dpbR9CqZZIRYLcn0kz/pUXSN+/RyDZTUerTXqzxAuj7RTVJCsPb5Po
      GaW4OUehbHHlyhgzMzN0DVxh4nL/qX8GcTE0ZQAesS0TR/HgUY8753AwTetoT1CLaZp4PB4U
      6bdwpTovg9bvl5+kmV/NnfXbNJVQwMdf/tGN826GoAEBuD2zwbv35ErK49qiQQnABdGUJ8FC
      nJb69gCOzcpihkCsner+DvmyzUh/N5mlVfqHhqhWythmlVAsLrVAoinUFYC9jWVWd4uMxNtZ
      XlqmZ/gqq0tLdHV3kVlcBSOH5YkyHovLzTAnceRmoYuirgBUtDJ9w5fZXM3w0itfZ27qARW8
      XAoEUJ0c2a0t2gfagYPbIW3blg1dk4NlWefdCEGdAegcHGJyaoZYsoPM/AyG4mf4UorpyRn6
      R8ZIJMJYho5pg+/w8qdcXqxBUU68NCsap66toHj8XJ947vCnzqPlz904LBcI+U+rXUI0hFwF
      Eq4mARCuJgEQriYBEK4mARCuJgEQriYBEK5Wd2+MWTVA9aJiYzkKXo9KtVrF5/Md9vo6KIoq
      HWCiKdQVAL2wzfTyNj3dXWwuZ9Bt6ExE2NsvE4p3gFFgv6QzPnENGQtCNIO6ArC9mcXGZn11
      mWC4jaTXYquk89z4FebnV1lL32fw+d9H5eBuMMuypBaoFsfBNM3zboWgzgC0d3eyPrNMMBLB
      KudYMxX6OuLcvfuAVM8AQ9deoJxbw0xFpRboJFILdGHUtRVawm189WbbE8s7eh7dNC5DiIjm
      IleBhKtJAISrSQCEq0kAhKtJAISrSQCEq0kAhKtJAISr1dURZldyfPxgmb7+XgrZFRxfmO62
      EJmVDXoGRrAqJfSyRu/gkAyMJZpCXQEw9Cper4JuGDi2jaHrbO5YTDw3Tjq9xsbiA3rHvya1
      QE8jtUAXRl0BcLwBRoYGyCwucam7j+z6Ko4N2ewOeHz09A9TymVxutuOhkWXWqAapBbowqhr
      KwSCIXZWVhm7chWjlCPZ0097Isz6+hbDgz1UjSSKbWPboEo9tGgC9Q2MpXro7T8ofAu2tR8t
      77nUA4DHHzjFpglx9uQqkHA1CYBwNQmAcDUJgHA1CYBwNQmAcDUJgHC1+gLgWGxvbVHc1zAq
      GsX9Mo5tkdvNYTsO1WoVQ9expfxBNIn6aoH21klvlrky1MrM7AIOEAn6wetjt1RBqRbRKhbX
      rl09o+YKcbrqCoAaStIV2WAxs0CwNUbIa7Fd0pkY7mU+vcrawjQDE99AQYrhTiTFcBdGXQGo
      6jrF/X0CoThU8mxpKv2dBwNjdfUNM9r6Ivp+FtOOy8BYJ5FiuAujrq0QjMS5fj1++FPf0fK2
      jp7DR9FTapYQjSFXgYSrSQCEq0kAhKtJAISrSQCEq0kAhKtJAISrSQCEq9XdHbkyd49SSxd2
      fgU1EKMj6mdpPUtn3xB2pUhZ0xgavSwDY4mmUFcAKqUcJi04tonP66OkaWRtixs3rh/UAqU/
      ZeDG6zIw1tNILdCFUTMAP/3pT3nzzTefWK4bVbT9AhvlMlf7UmhbWXyeFhYyi6gtYfpGxyll
      V7E7YjIw1kmkFujCqLkV5ufneeutt3jjjTc+tzzW1kEskeKy5WAaZaLxJKFWP4VCkUg0im2l
      wLEb0nAhTkPNACiKwuTkJLlcju9973v4fL7H/lHF5wWfN3y0KBaLAaDKt5poMjX/Yn/4wx82
      uh1CnItjv7JnH3yCFUgQC8Xp7npybmAhngXHBmB1fRPdXCHcNiQBEM+sYwMwfvUaKxvbjMr9
      veIZdmxP8MN0hvErg0w9mG5ke4RoqJoB0PaLtEeD/Phnv2Z4bLTRbRKiYWoGYHd7i4Jm0NmR
      pKKVG90mIRqmZgB6B0bYzW5yqX+QeKT1c/+Wz66yul1gYyXDbHoJXSvw4P4DSuUquVyO7OYG
      lpQ/iCZR8yRYK+ywmy8Sy24TjSWIhoMAOKbO+sYmdtjGU7Vp9ZnMZdYYHRtmcWmN4s4S0Y5h
      UoBt29i2jYOE4QmOg2VZ590KwTEBuHv3Hq9/8zU2SwpdqfjR8u3NNfRqlZ3NLD2JGJbtoHK4
      MRXwtbRgmtWj5yuKglQC1aJIjdQFUTMALarFb977GF03aA2FGB86GPen/dIQ7Z097Gom1n6O
      YlVh5FKc9MIy/cOjVCtxHKuKaYPPox5WgsqGfoICqiq3YlwENQNw89U3uPnqcb/hpy3qh2iI
      R9PkXR0/7Cvwx06/hUKcoWM7wn7+439DM2Fzs8D3f/AXdMaCjWyXEA1xbAACgVYcy+HyaBsV
      owpIAMSz59gD0UQixr5m0Dc2wUC7jPkpnk3H7gGKFYtXXnmFaDx+3FOEaHo19wClYh7MCu+9
      9x6rW7lGt0mIhqm5B9jeXANvgGDQxuf1NLpN4pTcv/U+6cU1xr9yk8X0LKlLw3i0LZZ3Db7z
      h69jVQq883+/o+/KDbT1eXKmj+cH23j3/iI3X3iJ3s4YC9P3yOxUeO3Fa7z1mw/5zre/xYe/
      /TWaEuFbr73U9Be5a+4BLKPCXmEfx3GQqobmNXHzZdpSKUaGBgiqOju5AiMjI6gOOMBKeorr
      X/s2OxsZVtZW2F2eZHZDp0W12N3bAww++O1tClsbVNQgrUEPiqIyMjyMcvgaza5mAAy9wl5u
      h62tLJr+Wc9utaIxPTXJxvYeK5l5pmfT6FqJqakpNN0kn8+zs52VWqALIrc6R6xrFG03SyDR
      g17c4Uf/+RM62lNopSLBSIK7H/2WquVl/NoEkVg3He1h2hMJ8vkchXyFtu4EEb9KdmuDudk5
      FleW+K+fvUUqmTjvj3cqFOeYgXt+9T8/ItjeS4sa4OYLEwDYtkVuJ8vGbolKfou2rgEcfZ/u
      vkssr25Tzq8TiF1ibLgXx3GwbZt//PcPePfeckM/1EXXFgnyL3//J2f+PpZZRfH4UByL3N4e
      4UgMrVjAtKFUzHFpYJhKqUAwHMXQigeHvT6VXL5I2K+wXjDpTUUoVUyCPoVCSSMQDGKUy+Dx
      kUjEmv4Q6NirQG3JJHfu3eHVN77/2FIFx7ZxLIuv3HyZzOw0FUdFUVVwwDLNzxW/yaBYT2dU
      LSz7rNaTAtbBAFzBUAzLBn8oih8IRaKYVQuvP0S1aqH4Dqp+KyYEQxEsoKMNDBtaWjxYQCjS
      cvBaEf/Bc/WzGdxLVcDf0pgRRmq+y+z0FFeuTzA9s/i5qkWjXCS7myfRlmJ1aQHL18rlnhRz
      swsMjFymmopiVw2pBXqax2qB/uFf3+Wj6bVzbtDF0p0M809/992GvFfNAOR3N7hz+xavv/km
      mdllGOwAIBCKMT7+qN6n/ej5169fO3gQeDaOC4V71AzAC7/3GpcnDCKtLcSfv97oNgnRMDWv
      Anm8LcSiYSxDI7uz1+g2CdEwx55p7GQ3KJX2MdUgciQvnlXHFsPd/vgDtrIbvP2T/2Bhs9DI
      NgnRMMcGIJmIk83u8tXXXifa6jvuaUI0tWMDoKoKisdHorObVETuBRDPpmPPAQ5mdwGP3Lsq
      ztFKtoBWqT79iV9QzQAYFQ1fIIxW3KKiG0fLHdtidzdHOBZHsQx0SyEc9LOXzxOLx7FMExwb
      j68FVUY9EKfgn3/8CXfnN8/s9WsG4MN3/pvZbZvOjiQjfR1Hy01Dp2pWmX74EI9j4wCRoB/H
      62W3WEExi2hli2syoK5oEjWPb77+x3/Gn3/3DWIBL5nV7NFyX6CV/b0sXp8Pf2uMZDRMQbcZ
      6O/DNnSW56cJt3WhIJPknehwkjzTNGX91OLQsPVz7DlAKNbGa9/41ueWlYs5dNt7MBWSUWBL
      U+jvTHD37gO6+oYZbX0RfT+LacfxySR5x3tskjxZPzUoNGz91FVyF4wkuHbtyXqfto6ew0dy
      87xoLnKJR7iaBEC4mgRAuJoEQLiaBEC4mgRAuJoEQLiaBEC4Wl0dYUa5yNzCEmpLCLucQw3E
      6Ij6WVrP0tU3hFUpUtE0Bkcv45EeTtEE6toDtAQjtCei+P1+fF4fFU0ju6dx48Z1irkcc5O3
      8EQ6UJFaoBNJLdDJGlgLVFcASturLGZLJGJhQtE4il3FpzpkMkuoLQH6Rq5Syq5iO+DxePB4
      PFLrUsthLZDX65X1U8thLVAj1k9dh0CBaIpB/Kiqh0QiTiSeJNzqp5AvEolFsawkinyjiSZS
      VwC8LX5SKf8Ty2Pxg8GyVK/cOyyai1wFEq4mARCuJgEQriYBEK4mARCuJgEQriYBEK5WVz+A
      qWvMpTNE2jrxVEsUqwr9nXHm0ssMjIxR1UuYukFbR4fUAommUNceQPH6GRrsJ5/Lktcs/I7B
      XGaN0bFh1lbXWJi5z55mogK2bWPbNs/GZJqnzHEeq5U678ZcTI2qJasrAI6hMZdZ5/Lo8OEc
      wg4qDpZlH9Zv+DDNz8ZxlDqX4ygoyqP/zrstF9PR+jnj96nrEKhSqeDYVTayeZJRP8Wqwsil
      OPMLywwMj1JNxXHMqkyS9zSPTZInajtaPxepGC6caGci8dnkeI8ejY8fjgXqjz35S0JcYPI1
      JFxNAiBcTQIgXE0CIFxNAiBcTQIgXE0CIFyt7gBo+yVsB/K5bVbWN7Ati63NLWzHQTd09EoZ
      W/r3RZOoKwCWrnH3zi3KVYeFdBqv18fa4jxVU2d+cZ2V5QVm55ek71c0jboC4PG3cqnroP93
      YHCIjeVF9nSHru5OMA1WF2YJJVKADIx1IhkY62QXYZK8WnStyNpmlooniqdawvG00JOKcu/e
      FD39w4RDL6KXc5h2m0ySdxKZJO9kF3WSPH9rhJdf/eYTy9vauw8fRU6jTUI0jFwFEq4mARCu
      JgEQriYBEK4mARCuJgEQriYBEK4mARCuVldHmKVrfPTJLW689BrLM/fYNxX6O+KsbO7QcWkQ
      Sy9Q2S8zPDYmA2OJplB/LVBnEscyUANxuuJhVnf3uXHjOvt7e6Qnb9ES75JJ8p5GaoFOdlEn
      yavqGptbW2zniuilHJu5Am1BLzOz83iCQfovT1DcWsaSSfJOJpPkneyiTpLn8bZwdeImqtfH
      pdQ4pq3gb/FQLlcIBoPYdgpwZLQz0TTqCoDq8RKOfFbw9uiXW1tbgYNvfSGaiVwFEq4mARCu
      JgEQriYBEK4mARCuJgEQriYBEK5WVz/A4zLzD6nYPga62pjLLDMwcgWzUqKqV0h1dUstkGgK
      X3AP4JDfy6OqKmvrW1wdH2NjbY25qU8pGspRLZBt2zgySd6TPjdJnqyfWi7kJHlHHIexazdQ
      jX0qpoWuG6CohKNRjEr54IVVtSGTnDUnBVVVj9aReNLR+jnj9/mCh0AKe9sbqK1xxroSLGRW
      6B8ewajEwTIPJ8lTDjeubOAnKDIg1tMcrZ+LVAx3RFHo7hs8+nHsyhgAAV/0NNokRMPIVSDh
      ahIA4WoSAOFqEgDhal86AI5tkd3KYjsOhmGgVyoyQ4xoGl+4J/iR1UwaWgKkl9ZRzQJaBa5d
      u3IabRPizH3pPYBuKXT3dOJUDVbSs4QSHahyjVs0iS8dgPZEiHt3p4gmk4xOvIhS3qVqySGQ
      aA5f+hAomurm+ZTMECOak+KcQbWR4zjYto1t2+xXTIyqedpv0dRUVSERCWLbNqVKlWrVOu8m
      XSiqqhIP+wEoagZV8+zWz5kE4BHbtlFVudJai+M4OI4j6+cYj/4sz7pm6kzX/nlt3Oz6EpOT
      UxQ0nWKxeOzzHMtkJ7fXwJZ9RlGUc1s/m6uLTE5OUtD0o2XlcvmJ59mmzs7e8evvLCmK0pCC
      wS99DnAR5Yv7XB4bY252jkgkTGU/z+Z2gVQiwnZeo7+3g5XlNZLtHewV90km4ufd5IbKFTWu
      XB5g+mEaj+rQGg4zPTXN88+/wObWOolEnFwuT1dnJzmtSjL+7J7bPdP7X0VRKBaLLGYWcGwb
      PF5Uq8J8OoNu2VSN6nk38VyYlRIz8yskol52ChVMPPT39REP+YgkO9FKGuNXB8lubp93U8/c
      M7kHiEfDzM3N0ds/iFEuobbH2dwp4W/xoXj9jA33srS4TCgSoTVsn3dzG667b4hkMoVtGZS0
      OUKhEAF0ChWHZDyKN9LCzOwKAyOD6M/4Cfr/A4+Rj7JeV1INAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
